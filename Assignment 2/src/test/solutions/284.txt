Program([ClassDecl(Id(Giaiphuongtrinh),[MethodDecl(Id(giaiPt),Instance,[],Block([If(BinaryOp(==,Id(a),IntLit(0)),Block([If(BinaryOp(!=,Id(b),IntLit(0)),Block([ConstDecl(Id(x),FloatType,None),AssignStmt(Id(x),BinaryOp(/,UnaryOp(-,Id(c)),Id(b))),AssignStmt(Id(x),BinaryOp(/,CallExpr(Id(Math),Id(round),[BinaryOp(*,Id(x),FloatLit(100.0))]),FloatLit(100.0))),Call(FieldAccess(Id(System),Id(out)),Id(println),[Id(x)])]),If(BinaryOp(==,Id(b),IntLit(0)),Block([Call(FieldAccess(Id(System),Id(out)),Id(println),[StringLit(Phuong trinh khong hop le!)]),Return()])))]),Block([ConstDecl(Id(delta),FloatType,BinaryOp(-,BinaryOp(*,Id(b),Id(b)),BinaryOp(*,BinaryOp(*,IntLit(4),Id(a)),Id(c)))),If(BinaryOp(<,Id(delta),IntLit(0)),Block([Call(FieldAccess(Id(System),Id(out)),Id(println),[StringLit(Phuong trinh vo nghiem!)])]),If(BinaryOp(==,Id(delta),IntLit(0)),Block([ConstDecl(Id(x),FloatType,None),AssignStmt(Id(x),BinaryOp(/,UnaryOp(-,Id(b)),BinaryOp(*,IntLit(2),Id(a)))),Call(FieldAccess(Id(System),Id(out)),Id(println),[StringLit(Phuong trinh co nghiem kep: )]),Call(FieldAccess(Id(System),Id(out)),Id(println),[BinaryOp(/,CallExpr(Id(Math),Id(round),[BinaryOp(*,Id(x),FloatLit(100.0))]),FloatLit(100.0))])]),Block([ConstDecl(Id(x1),FloatType,None),ConstDecl(Id(x2),FloatType,None),AssignStmt(Id(x1),BinaryOp(/,BinaryOp(+,UnaryOp(-,Id(b)),CallExpr(Id(Math),Id(sqrt),[Id(delta)])),BinaryOp(*,IntLit(2),Id(a)))),AssignStmt(Id(x2),BinaryOp(/,BinaryOp(-,UnaryOp(-,Id(b)),CallExpr(Id(Math),Id(sqrt),[Id(delta)])),BinaryOp(*,IntLit(2),Id(a)))),Call(FieldAccess(Id(System),Id(out)),Id(println),[StringLit(Phuong trinh co nghiem phan biet: )]),Call(FieldAccess(Id(System),Id(out)),Id(println),[BinaryOp(/,CallExpr(Id(Math),Id(ceil),[BinaryOp(*,Id(x1),FloatLit(100.0))]),FloatLit(100.0))]),Call(FieldAccess(Id(System),Id(out)),Id(println),[BinaryOp(/,CallExpr(Id(Math),Id(round),[BinaryOp(*,Id(x2),FloatLit(100.0))]),FloatLit(100.0))])])))]))]))])])