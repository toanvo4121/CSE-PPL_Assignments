Program([ClassDecl(Id(RecursiveAlgorithms),[MethodDecl(Id(recSearch),Instance,[param(Id(arr),ArrayType(5,IntType)),param(Id(l),IntType),param(Id(r),IntType),param(Id(x),IntType)],Block([If(BinaryOp(<,Id(r),Id(l)),Block([Return(UnaryOp(-,IntLit(1)))])),If(BinaryOp(==,ArrayCell(Id(arr),[Id(l)]),Id(x)),Block([Return(Id(l))])),If(BinaryOp(==,ArrayCell(Id(arr),[Id(r)]),Id(x)),Block([Return(Id(r))])),Return(CallExpr(Self(),Id(recSearch),[Id(arr),BinaryOp(+,Id(l),IntLit(1)),BinaryOp(-,Id(r),IntLit(1)),Id(x)]))])),MethodDecl(Id(isPalRec),Instance,[param(Id(str),ArrayType(100,StringType)),param(Id(s),IntType),param(Id(e),IntType)],Block([If(BinaryOp(==,Id(s),Id(e)),Block([Return(BooleanLit(True))])),If(BinaryOp(!=,ArrayCell(Id(str),[Id(s)]),ArrayCell(Id(str),[Id(e)])),Block([Return(BooleanLit(False))])),If(BinaryOp(<,Id(s),BinaryOp(+,Id(e),IntLit(1))),Block([Return(CallExpr(Self(),Id(isPalRec),[Id(str),BinaryOp(+,Id(s),IntLit(1)),BinaryOp(-,Id(e),IntLit(1))]))])),Return(BooleanLit(True))])),MethodDecl(Id(isPalindrome),Instance,[param(Id(str),ArrayType(100,StringType))],Block([ConstDecl(Id(n),IntType,CallExpr(Id(Str),Id(strlen),[Id(str)])),If(BinaryOp(==,Id(n),IntLit(0)),Block([Return(BooleanLit(True))])),Return(CallExpr(Self(),Id(isPalRec),[Id(str),IntLit(0),BinaryOp(-,Id(n),IntLit(1))]))])),MethodDecl(Id(SumRecursion),Instance,[param(Id(n),IntType)],Block([If(BinaryOp(==,Id(n),IntLit(0)),Block([Return(IntLit(0))])),Return(BinaryOp(+,Id(n),CallExpr(Self(),Id(SumRecursion),[BinaryOp(-,Id(n),IntLit(1))])))])),MethodDecl(Id(Fibonacci),Instance,[param(Id(n),IntType)],Block([If(BinaryOp(||,BinaryOp(==,Id(n),IntLit(1)),BinaryOp(==,Id(n),IntLit(2))),Block([Return(IntLit(1))])),Return(BinaryOp(+,CallExpr(Self(),Id(Fibonacci),[BinaryOp(-,Id(n),IntLit(1))]),CallExpr(Self(),Id(Fibonacci),[BinaryOp(-,Id(n),IntLit(2))])))])),MethodDecl(Id(factorial),Instance,[param(Id(n),IntType)],Block([If(BinaryOp(==,Id(n),IntLit(0)),Block([Return(IntLit(1))])),Return(BinaryOp(*,Id(n),CallExpr(Self(),Id(factorial),[BinaryOp(-,Id(n),IntLit(1))])))]))])])