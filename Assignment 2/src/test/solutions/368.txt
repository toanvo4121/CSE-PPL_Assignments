Program([ClassDecl(Id(ConvertNumber),[MethodDecl(Id($reverseNumber),Static,[param(Id(num),IntType),param(Id(digitCount),IntType)],Block([VarDecl(Id(result),IntType,IntLit(0)),AssignStmt(Id(result),BinaryOp(+,BinaryOp(*,Id(result),IntLit(10)),BinaryOp(%,Id(num),IntLit(10)))),AssignStmt(Id(num),IntLit(10)),AssignStmt(Id(digitCount),UnaryOp(-,IntLit(1))),Return(Id(result))])),MethodDecl(Id($convertNumberToBaseN),Static,[param(Id(num),IntType),param(Id(base_n),IntType)],Block([VarDecl(Id(result),IntType,IntLit(0)),VarDecl(Id(digitCount),IntType,IntLit(0)),AssignStmt(Id(result),BinaryOp(+,BinaryOp(*,Id(result),IntLit(10)),BinaryOp(%,Id(num),Id(base_n)))),AssignStmt(Id(num),Id(base_n)),AssignStmt(Id(digitCount),UnaryOp(-,IntLit(12))),Return(CallExpr(Self(),Id(reverseNumber),[Id(result),Id(digitCount)]))]))]),ClassDecl(Id(Program),[MethodDecl(Id(main),Static,[],Block([VarDecl(Id(number),IntType),AssignStmt(Id(number),CallExpr(Id(Scan),Id(input),[])),Call(Id(ConvertNumber),Id($convertNumberToBaseN),[Id(number),IntLit(2)]),Call(Id(ConvertNumber),Id($convertNumberToBaseN),[Id(number),IntLit(16)])]))])])